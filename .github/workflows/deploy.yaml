name: Deploy library microservice to kubernetes

on:

  push: 
    branches:
      - main


  workflow_dispatch: 

permissions:
  id-token: write
  contents: read

jobs:



  deploy:
    runs-on: ubuntu-latest
    
    env:
      VERSION: ${{ github.sha }}

    steps:
      - name: checkout code
        uses: actions/checkout@v3

      - name: setup azure login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }} 
          
      - name: Setup terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.6

      - name: terraform init
        working-directory: ./scripts/terraform
        run: terraform init

      - name: terraform plan
        working-directory: ./scripts/terraform
        run: terraform plan

      - name: terraform apply
        working-directory: ./scripts/terraform
        run: terraform apply -auto-approve








      - name: Get Container Registry Name
        working-directory: ./scripts/terraform
        run: |
          sleep 20
          CONTAINER_REGISTRY=$(terraform output registry_name | awk -F'"' '{print $2}')
          echo "CONTAINER_REGISTRY=${ CONTAINER_REGISTRY }" 
          echo "CONTAINER_REGISTRY=${ CONTAINER_REGISTRY }" >> $GITHUB_ENV




      - name: Login to Azure Container Registry
        run: |
          echo ${{ secrets.CLIENT_SECRET }} | docker login ${{ env.CONTAINER_REGISTRY }} -u ${{ secrets.CLIENT_ID }} --password-stdin

      - name: Build Docker images
        env:
          CONTAINER_REGISTRY: $CONTAINER_REGISTRY
          VERSION: ${{ github.sha }}
        run: ./scripts/build-image.sh


      - name: Push Docker images
        env:
          CONTAINER_REGISTRY: $CONTAINER_REGISTRY
          VERSION: ${{ github.sha }}
        run: ./scripts/push-image.sh

      - name: Get Kubernetes Config
        working-directory: ./scripts/terraform
        run: |
          KUBECONFIG_CONTENT=$(terraform output -raw kube_config | base64 -w 0)
          echo "KUBECONFIG_CONTENT<<EOF" >> $GITHUB_ENV
          echo "$KUBECONFIG_CONTENT" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
      
      - name: Set up kubectl
        uses: tale/kubectl-action@v1
        with:
          base64-kube-config: ${{ env.KUBECONFIG_CONTENT }}
          kubectl-version: v1.30.3

      - name: Deploy Docker images
        env:
          CONTAINER_REGISTRY: $CONTAINER_REGISTRY
          VERSION: ${{ github.sha }}
        run: ./scripts/deploy.sh

      
